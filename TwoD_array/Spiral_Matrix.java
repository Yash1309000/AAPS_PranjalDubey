package TwoD_array;
import java.util.*;
public class Spiral_Matrix {
        public List<Integer> spiralOrder(int[][] matrix) {
            List<Integer> result = new ArrayList<>();
            int n=matrix.length, m= matrix[0].length;
            int left=0 , bottom = n-1;
            int top= 0 , right=m-1;

            while(result.size() < m * n){

                for(int i=left;i<=right && result.size() < m * n;i++){
                    result.add(matrix[top][i]);
                }
                for(int i=top+1;i<=bottom-1 && result.size() < m * n;i++){
                    result.add(matrix[i][right]);
                }
                for(int i=right;i>=left && result.size() < m * n;i--){
                    result.add(matrix[bottom][i]);
                }
                for(int i=bottom-1;i>=top+1 && result.size() < m * n;i--){
                    result.add(matrix[i][left]);
                }
                top++;
                bottom--;
                left++;
                right--;
            }
            return result;
        }
    public static void main(String[] args) {
        Spiral_Matrix sm = new Spiral_Matrix();
        int[][] matrix = {
                {1, 2, 3},
                {4, 5, 6},
                {7, 8, 9}
        };

        List<Integer> result = sm.spiralOrder(matrix);
        System.out.println("Spiral Order: " + result);
    }


































































































































































































































































































































































































































































































































































































































































































}
